"use strict"; var a0_0x223f59 = a0_0x1033; (function (_0x1ca668, _0x3bd220) { var _0x87bda6 = a0_0x1033, _0x65af3f = _0x1ca668(); while (!![]) { try { var _0x4c08da = (parseInt(_0x87bda6(0x134)) / 0x1) * (parseInt(_0x87bda6(0x118)) / 0x2) + (-parseInt(_0x87bda6(0x14f)) / 0x3) * (-parseInt(_0x87bda6(0x149)) / 0x4) + -parseInt(_0x87bda6(0x117)) / 0x5 + parseInt(_0x87bda6(0x113)) / 0x6 + -parseInt(_0x87bda6(0x126)) / 0x7 + (parseInt(_0x87bda6(0x112)) / 0x8) * (parseInt(_0x87bda6(0x139)) / 0x9) + (parseInt(_0x87bda6(0x135)) / 0xa) * (-parseInt(_0x87bda6(0x11d)) / 0xb); if (_0x4c08da === _0x3bd220) break; else _0x65af3f["push"](_0x65af3f["shift"]()); } catch (_0x3047ba) { _0x65af3f["push"](_0x65af3f["shift"]()); } } })(a0_0x4d1b, 0x70f7f); var __awaiter = (this && this[a0_0x223f59(0x129)]) || function (_0x10db87, _0x3abb78, _0x5f1f91, _0x4fffe4) { function _0x8b0591(_0x460aa0) { return _0x460aa0 instanceof _0x5f1f91 ? _0x460aa0 : new _0x5f1f91(function (_0x3df635) { _0x3df635(_0x460aa0); }); } return new (_0x5f1f91 || (_0x5f1f91 = Promise))(function ( _0x19c75f, _0x396c46 ) { var _0x55b020 = a0_0x1033; function _0x412060(_0x4fee53) { var _0x5a145e = a0_0x1033; try { _0x1c8a8d(_0x4fffe4[_0x5a145e(0x138)](_0x4fee53)); } catch (_0x5d08dd) { _0x396c46(_0x5d08dd); } } function _0x5e5280(_0x344300) { try { _0x1c8a8d(_0x4fffe4["throw"](_0x344300)); } catch (_0x1ff535) { _0x396c46(_0x1ff535); } } function _0x1c8a8d(_0x502401) { var _0x254c98 = a0_0x1033; _0x502401[_0x254c98(0x122)] ? _0x19c75f(_0x502401[_0x254c98(0x13c)]) : _0x8b0591(_0x502401[_0x254c98(0x13c)])["then"]( _0x412060, _0x5e5280 ); } _0x1c8a8d( (_0x4fffe4 = _0x4fffe4[_0x55b020(0x132)](_0x10db87, _0x3abb78 || []))[ "next" ]() ); }); }, __generator = (this && this[a0_0x223f59(0x130)]) || function (_0x835f98, _0x47bbbf) { var _0x1cd31d = a0_0x223f59, _0xe102e6 = { label: 0x0, sent: function () { if (_0x452674[0x0] & 0x1) throw _0x452674[0x1]; return _0x452674[0x1]; }, trys: [], ops: [], }, _0x3a7cd3, _0x470da2, _0x452674, _0x1167e8; return ( (_0x1167e8 = { next: _0x4cf112(0x0), throw: _0x4cf112(0x1), return: _0x4cf112(0x2), }), typeof Symbol === _0x1cd31d(0x12e) && (_0x1167e8[Symbol["iterator"]] = function () { return this; }), _0x1167e8 ); function _0x4cf112(_0x177c39) { return function (_0x3ce957) { return _0x23271a([_0x177c39, _0x3ce957]); }; } function _0x23271a(_0x5b166b) { var _0xa3de18 = _0x1cd31d; if (_0x3a7cd3) throw new TypeError("Generator\x20is\x20already\x20executing."); while ( (_0x1167e8 && ((_0x1167e8 = 0x0), _0x5b166b[0x0] && (_0xe102e6 = 0x0)), _0xe102e6) ) try { if ( ((_0x3a7cd3 = 0x1), _0x470da2 && (_0x452674 = _0x5b166b[0x0] & 0x2 ? _0x470da2["return"] : _0x5b166b[0x0] ? _0x470da2[_0xa3de18(0x111)] || ((_0x452674 = _0x470da2[_0xa3de18(0x146)]) && _0x452674[_0xa3de18(0x119)](_0x470da2), 0x0) : _0x470da2[_0xa3de18(0x138)]) && !(_0x452674 = _0x452674[_0xa3de18(0x119)]( _0x470da2, _0x5b166b[0x1] ))[_0xa3de18(0x122)]) ) return _0x452674; if (((_0x470da2 = 0x0), _0x452674)) _0x5b166b = [_0x5b166b[0x0] & 0x2, _0x452674[_0xa3de18(0x13c)]]; switch (_0x5b166b[0x0]) { case 0x0: case 0x1: _0x452674 = _0x5b166b; break; case 0x4: _0xe102e6[_0xa3de18(0x148)]++; return { value: _0x5b166b[0x1], done: ![] }; case 0x5: _0xe102e6[_0xa3de18(0x148)]++, (_0x470da2 = _0x5b166b[0x1]), (_0x5b166b = [0x0]); continue; case 0x7: (_0x5b166b = _0xe102e6[_0xa3de18(0x120)]["pop"]()), _0xe102e6[_0xa3de18(0x12a)][_0xa3de18(0x11e)](); continue; default: if ( !((_0x452674 = _0xe102e6[_0xa3de18(0x12a)]), (_0x452674 = _0x452674[_0xa3de18(0x10d)] > 0x0 && _0x452674[_0x452674[_0xa3de18(0x10d)] - 0x1])) && (_0x5b166b[0x0] === 0x6 || _0x5b166b[0x0] === 0x2) ) { _0xe102e6 = 0x0; continue; } if ( _0x5b166b[0x0] === 0x3 && (!_0x452674 || (_0x5b166b[0x1] > _0x452674[0x0] && _0x5b166b[0x1] < _0x452674[0x3])) ) { _0xe102e6[_0xa3de18(0x148)] = _0x5b166b[0x1]; break; } if ( _0x5b166b[0x0] === 0x6 && _0xe102e6["label"] < _0x452674[0x1] ) { (_0xe102e6[_0xa3de18(0x148)] = _0x452674[0x1]), (_0x452674 = _0x5b166b); break; } if (_0x452674 && _0xe102e6["label"] < _0x452674[0x2]) { (_0xe102e6["label"] = _0x452674[0x2]), _0xe102e6[_0xa3de18(0x120)][_0xa3de18(0x10f)](_0x5b166b); break; } if (_0x452674[0x2]) _0xe102e6[_0xa3de18(0x120)][_0xa3de18(0x11e)](); _0xe102e6[_0xa3de18(0x12a)]["pop"](); continue; } _0x5b166b = _0x47bbbf[_0xa3de18(0x119)](_0x835f98, _0xe102e6); } catch (_0x4a0de4) { (_0x5b166b = [0x6, _0x4a0de4]), (_0x470da2 = 0x0); } finally { _0x3a7cd3 = _0x452674 = 0x0; } if (_0x5b166b[0x0] & 0x5) throw _0x5b166b[0x1]; return { value: _0x5b166b[0x0] ? _0x5b166b[0x1] : void 0x0, done: !![], }; } }; (exports.__esModule = true), (module[a0_0x223f59(0x13f)] = { oprfOutput: oprfOutput, generateKeyPair: generateKeyPair, encryptWithRWDKey: encryptWithRWDKey, decryptEnvelope: decryptEnvelope, encryptData: encryptData, signData: signData, }), (exports[a0_0x223f59(0x116)] = exports["encryptData"] = exports[a0_0x223f59(0x128)] = exports[a0_0x223f59(0x11a)] = exports[a0_0x223f59(0x12f)] = exports[a0_0x223f59(0x131)] = void 0x0); function a0_0x4d1b() { var _0x1c179d = [ "next", "27tcNeUY", "sign", "toString", "value", "setAuthTag", "bn.js", "exports", "charCodeAt", "ed25519", "from", "pointFromX", "buffer", "mul", "return", "createHash", "label", "7512xFIOwf", "encode", "utf8", "elliptic", "aes-256-gcm", "node-forge", "483HlNodl", "getPublic", "createDecipher", "encryptData", "util", "sha256", "length", "crypto-browserify", "push", "hex", "throw", "429152tcBtjH", "4237698VkzUEd", "getPrivate", "eddsa", "signData", "1817555hhEPeC", "2ZUUJaB", "call", "encryptWithRWDKey", "encodeUtf8", "digest", "1148961HmTtvF", "pop", "stringify", "ops", "update", "done", "Buffer", "genKeyPair", "final", "1976240IBtZtP", "parse", "decryptEnvelope", "__awaiter", "trys", "getAuthTag", "concat", "sent", "function", "generateKeyPair", "__generator", "oprfOutput", "apply", "toDER", "252330pYTUsN", "30dDlxHh", "__esModule", "createCipher", ]; a0_0x4d1b = function () { return _0x1c179d; }; return a0_0x4d1b(); } var buffer_1 = require("buffer"); var crypto_browserify_1 = require("crypto-browserify"); var elliptic_1 = require("elliptic"); var bn_js_1 = require("bn.js"); var forge = require("node-forge"); global.Buffer = buffer_1.Buffer; var curve = new elliptic_1.ec('ed25519'); function oprfOutput(_0x437853, _0x3f9c2d) { var _0x25e6ae = a0_0x223f59, _0x42903c = new elliptic_1[_0x25e6ae(0x115)](_0x25e6ae(0x141)), _0x39a36c = (0x0, crypto_browserify_1[_0x25e6ae(0x147)])(_0x25e6ae(0x10c)) [_0x25e6ae(0x121)](_0x437853) [_0x25e6ae(0x11c)](), _0x559588 = buffer_1["Buffer"][_0x25e6ae(0x142)](_0x39a36c), _0x5060d1 = buffer_1[_0x25e6ae(0x123)][_0x25e6ae(0x142)]( _0x3f9c2d, _0x25e6ae(0x110) ), _0x4c20d5 = _0x42903c["curve"][_0x25e6ae(0x143)](_0x559588, !![]), _0x1c54b8 = new bn_js_1["BN"](_0x5060d1), _0xd32fd = _0x4c20d5[_0x25e6ae(0x145)](_0x1c54b8)[_0x25e6ae(0x14a)]( _0x25e6ae(0x110), ![] ); return _0xd32fd; } exports.oprfOutput = oprfOutput; function generateKeyPair() { var _0x1fddcd = a0_0x223f59, _0x2acc = curve[_0x1fddcd(0x124)](), _0x4e67be = _0x2acc[_0x1fddcd(0x114)](_0x1fddcd(0x110)), _0x293c17 = _0x2acc[_0x1fddcd(0x108)](_0x1fddcd(0x110)); return { privateKey: _0x4e67be, publicKey: _0x293c17 }; } exports.generateKeyPair = generateKeyPair; function encryptWithRWDKey(_0x26ee14, _0x117edf) { var _0x54fdb1 = a0_0x223f59, _0x5624df = JSON[_0x54fdb1(0x11f)](_0x26ee14), _0x4a1c6d = buffer_1["Buffer"][_0x54fdb1(0x142)]( _0x5624df, _0x54fdb1(0x14b) ), _0x3bfd6e = (0x0, crypto_browserify_1[_0x54fdb1(0x137)])( _0x54fdb1(0x14d), _0x117edf ), _0x459220 = _0x3bfd6e["update"](_0x4a1c6d, null, "hex"); _0x459220 += _0x3bfd6e[_0x54fdb1(0x125)](_0x54fdb1(0x110)); var _0x58c687 = _0x3bfd6e[_0x54fdb1(0x12b)]()[_0x54fdb1(0x13b)]("hex"); return { encryptedEnvelope: _0x459220, authTag: _0x58c687 }; } exports.encryptWithRWDKey = encryptWithRWDKey; function decryptEnvelope(_0xb0a740, _0x300dca, _0x1e0b06) { var _0x3fea11 = a0_0x223f59, _0x2b4c72 = (0x0, crypto_browserify_1[_0x3fea11(0x109)])( _0x3fea11(0x14d), _0x1e0b06 ); _0x2b4c72[_0x3fea11(0x13d)]( buffer_1[_0x3fea11(0x123)][_0x3fea11(0x142)](_0x300dca, _0x3fea11(0x110)) ); var _0x3266e2 = _0x2b4c72[_0x3fea11(0x121)](_0xb0a740, "hex"); _0x3266e2 = buffer_1[_0x3fea11(0x123)][_0x3fea11(0x12c)]([ _0x3266e2, _0x2b4c72[_0x3fea11(0x125)](), ]); var _0x4378c8 = _0x3266e2[_0x3fea11(0x13b)]("utf8"); return JSON[_0x3fea11(0x127)](_0x4378c8); } exports.decryptEnvelope = decryptEnvelope; function pemToArrayBuffer(_0x4b4f2e) { var _0x4b90a5 = a0_0x223f59, _0x5b4c6c = new ArrayBuffer(_0x4b4f2e[_0x4b90a5(0x10d)]), _0x4f3927 = new Uint8Array(_0x5b4c6c); for ( var _0x3e5c18 = 0x0, _0x198be3 = _0x4b4f2e["length"]; _0x3e5c18 < _0x198be3; _0x3e5c18++ ) { _0x4f3927[_0x3e5c18] = _0x4b4f2e[_0x4b90a5(0x140)](_0x3e5c18); } return _0x5b4c6c; } function a0_0x1033(_0x14dbc2, _0x55cc8d) { var _0x4d1b3d = a0_0x4d1b(); return ( (a0_0x1033 = function (_0x1033a7, _0xed9815) { _0x1033a7 = _0x1033a7 - 0x108; var _0x4cbd72 = _0x4d1b3d[_0x1033a7]; return _0x4cbd72; }), a0_0x1033(_0x14dbc2, _0x55cc8d) ); } function encryptData(_0x1d4175, _0x38a752) { return __awaiter(this, void 0x0, void 0x0, function () { var _0x2420a6; return __generator(this, function (_0x367a64) { var _0x1f5663 = a0_0x1033; return ( (_0x2420a6 = forge["pki"] ["publicKeyFromPem"](_0x38a752) ["encrypt"](forge[_0x1f5663(0x10b)][_0x1f5663(0x11b)](_0x1d4175))), [0x2, forge[_0x1f5663(0x10b)]["encode64"](_0x2420a6)] ); }); }); } exports.encryptData = encryptData; function signData(_0x2458bb, _0x16fdf0) { return __awaiter(this, void 0x0, void 0x0, function () { var _0x28fabe, _0x46a770; return __generator(this, function (_0x594c78) { var _0x128209 = a0_0x1033; switch (_0x594c78[_0x128209(0x148)]) { case 0x0: _0x28fabe = buffer_1[_0x128209(0x123)][_0x128209(0x142)]( _0x16fdf0, _0x128209(0x110) ); return [0x4, curve[_0x128209(0x13a)](_0x2458bb, _0x28fabe)]; case 0x1: _0x46a770 = _0x594c78[_0x128209(0x12d)](); return [ 0x2, { data: _0x2458bb, signature: buffer_1[_0x128209(0x123)] [_0x128209(0x142)](_0x46a770[_0x128209(0x133)]()) [_0x128209(0x13b)](_0x128209(0x110)), }, ]; } }); }); } exports.signData  = signData;